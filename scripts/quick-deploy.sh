
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è –Ω–∞ VPS
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/quick-deploy.sh

set -e

echo "üöÄ Quick Deploy Script for Arcadia News"
echo "========================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "‚ùå Error: .env file not found!"
    echo "Please copy .env.example to .env and configure it:"
    echo "  cp .env.example .env"
    echo "  nano .env"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Error: Docker is not installed!"
    echo "Please run: sudo ./scripts/setup-vps.sh"
    exit 1
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
export $(grep -v '^#' .env | xargs)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if [ -z "$NEXTAUTH_SECRET" ] || [ "$NEXTAUTH_SECRET" == "your_nextauth_secret_here_min_32_characters" ]; then
    echo "‚ùå Error: NEXTAUTH_SECRET is not configured!"
    echo "Generate one with: openssl rand -base64 32"
    exit 1
fi

echo "‚úÖ Environment variables loaded"
echo ""

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë Stopping old containers..."
docker-compose down || true

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "üßπ Clean old Docker images? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    docker system prune -af --volumes
fi

# –°–±–æ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo "üî® Building Docker images..."
docker-compose build --no-cache

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üöÄ Starting containers..."
docker-compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "‚è≥ Waiting for database to be ready..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä Checking container status..."
docker-compose ps

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
echo ""
echo "üìã Recent logs:"
docker-compose logs --tail=50

echo ""
echo "‚úÖ Deployment completed!"
echo ""
echo "üìù Next steps:"
echo "   1. Check logs: docker-compose logs -f"
echo "   2. Access your app: http://$(hostname -I | awk '{print $1}'):${APP_PORT:-3000}"
echo "   3. Monitor health: docker-compose ps"
echo ""
